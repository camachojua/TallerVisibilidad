* Taller de Visibilidad Web

** Tecnologías

- Linux
- Git
- Nodejs
- Apache
- MariaDB
- Ngrok
- Gmail

** Instalación y configuración

Antes de iniciar, se debe asegurar que se tiene acceso de
administrador =root= en la máquina que se trabajará

#+BEGIN_SRC bash
  sudo apt update
  sudo apt install -y mariadb-server git apache2 nodejs npm gnupg2
  sudo systemctl start mariadb
  sudo systemctl start apache2
  sudo mysql_secure_installation
  ssh-keygen
#+END_SRC

En el último paso estableceremos la nueva contraseña de =root=,
eliminar las bases de datos por defecto y recargar los
privilegios. Para fines didácticos necesitamos crear dos carpetas:
=local= y =server=. Es momento de copiar nuestra llave pública
=id_rsa.pub=, para ello se debe ejecutar el comando:

#+BEGIN_SRC bash
cat ~/.ssh/id_rsa.pub
#+END_SRC

El contenido debe ser copiado y pegado en el prefil de github del
usuario, esta configuración se hace en este [[por medio de ][enlace]]. Antes de comenzar
a escribir código es necesario crear un repositorio y clonarlo:

#+BEGIN_SRC bash
mkdir local && cd local
git clone https://github.com/camachojua/TallerVisibilidad.git
#+END_SRC

De nuevo, por fines didácticos se añadirá al usuario en curso al grupo
=www-data=, con el fin de evitar problemas de permisos cuando se
intente modificar un archivo. Para ello debemos cambiarnos al
directorio de apache =/var/www/=, cambiar el grupo y usuario al que
pertenece el directorio (de =root= a =www-data=) y por último
agregaremos al usuario local al grupo =www-data=.

#+BEGIN_SRC bash
cd /var/www
newgrp www-data
sudo chown -R www-data:www-data .
sudo chmod 775 -R /var/www/
sudo usermod -a -G www-data usuario
#+END_SRC

Después de establecer los permisos hay que clonar el repositorio en la
carpeta =/var/www/html/=:

#+BEGIN_SRC bash
cd /var/www
sudo chmod -R 755 .
sudo chmod -R 755 html
git clone https://github.com/camachojua/TallerVisibilidad.git
#+END_SRC

Ahora hay que levantar un *webhook* en github, para iremos a este
 [[https://github.com/arturo8gll][perfil de github]], donde se encontrarán varios repositorios de esos se
 hará un *fork* a este [[al][repositorio]], al terminar se creará una copia de
 ese repositorio en tu perfil de github, posteriormente se clonará el
 repositorio usando ssh:

#+BEGIN_SRC bash
cd /var/www/html
git clone git@github.com:camachojua/vw-webhook.git
cd vw-webhook
#+END_SRC

El proyecto =vw-webhook= esta desarrollado en =node=, para poder
utilizarlo debemos ejecutar el comando:

#+BEGIN_SRC bash
npm install
#+END_SRC

El archivo =server.js= contiene el webhook necesario para lanzar un
trabajo por lo tanto se debe ejecutar, posteriormente se hará uso de
=ngrok= para publicar el puerto:

#+BEGIN_SRC bash
node server.js &
~/ngrok http 3000
#+END_SRC

Al ejecutar el último comando se nos regresa una url donde podemos
consultar nuestro servicio desde cualquier punto de interner, en este
ejemplo =ngrok= devolvió:

#+BEGIN_SRC bash
ngrok by @inconshreveable
(Ctrl+C to quit)
Session Status                online
Account                       Juan Alberto Camacho Bolaños (Plan: Free)
Version                       2.3.34
Region                        United States (us)
Web Interface                 http://127.0.0.1:4040
Forwarding                    http://33756b11.ngrok.io -> http://localhost:3000
Forwarding                    https://33756b11.ngrok.io -> http://localhost:3000
#+END_SRC

Es momento de ir al repositorio que se creó [[https://github.com/camachojua/TallerVisibilidad.git][inicialmente]] y crear un
[[webhook][webhook]], insertamos el valor que nos devuelve =ngrok=:
=https://33756b11.ngrok.io/visibilidad= con el *content-type*
=application/json=, verificación de certificado habilitada y el tipo
de evento enviado como *push*, por último hay que dar clic en *add webhook*.

En la ventana de ejecución de =ngrok= debió aparecer un mensaje similar a:

#+BEGIN_SRC bash
HTTP Requests
-------------
POST /visibilidad              200 OK      
#+END_SRC

Ahora hay que editar el archivo =deploy.sh=, la primer línea debe
apuntar a la carpeta =~/TallerVisibilidad=

#+BEGIN_SRC bash
cd ~/TallerVisibilidad

echo "Pulling from Master"

git pull origin master

echo "Pulled successfully from master"
#+END_SRC

Y después ejecutamos el archivo =/var/www/html/vw-webhook/deploy.sh=
para comprobar su buen funcionamento. Una vez comprobado el
funcionamiento hay que cambiarnos al directorio que contiene el código
del primer repositorio que creamos (=TallerVisibilidad=):

#+BEGIN_SRC bash
cd ~/TallerVisibilidad/
mkdir local/dist
echo "<h1>UNAM</h1>" >> local/dist
#+END_SRC

Posteriormente revisaremos el estado del repositorio con =git status=
agregaremos los cambios realizados con =git add local= y
posteriormente haremos un commit con =git commit -m=. Cuando hagamos
un =git push= el webhook responderá apropiadamente y copiará la
información correspondiente dentro de la carpeta =/var/www/html= (vía
un =git pull=) de forma automática.

Para que todo se vea automático se modificará la configuración de
apache para que apunte al archivo =index.html= del repositorio
almacenado en =/var/www/html/TallerVisibilidad/=. Se modificará el
archivo =/etc/apache2/sites-enabled/000-default.conf=, el cambio será:

#+BEGIN_SRC diff
+ DocumentRoot /var/www/html/TallerVisibilidad/local/dist
- DocumentRoot /var/www/html
#+END_SRC

Por último se debe reiniciar el servidor apache:

#+BEGIN_SRC bash
systemctl restart apache2
#+END_SRC

Al recargar el servidor apache se debe mostrar una página de
bienvenida de la unam. Es tiempo de realizar más cambios al archivo
=index.html= del repositorio almacenado en la carpeta =/home=

** Página estática

** Página dinámica


